{"version":3,"sources":["Components/ToDo/ToDo.js","Components/Input/Input.js","App.js","reportWebVitals.js","index.js"],"names":["ToDo","text","setList","todoList","classes","makeStyles","theme","root","color","buttonStyle","background","margin","spacing","useStyle","TextField","disabled","value","inputProps","className","InputLabelProps","SelectProps","Button","onClick","event","preventDefault","n","i","length","push","Input","list","useState","todo","setTodo","input","id","onChange","target","concat","App","todos","setTodos","createMuiTheme","palette","primary","main","ThemeProvider","map","t","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA4CeA,EAzCF,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SA0BpBC,EAzBWC,aAAW,SAAAC,GAAK,MAAK,CAClCC,KAAK,CACDC,MAAO,WAGXC,YAAY,CACRC,WAAY,UACZC,OAAQL,EAAMM,QAAQ,QAkBdC,GAChB,OACI,gCACI,cAACC,EAAA,EAAD,CACAC,UAAQ,EACRC,MAAOf,EACPgB,WAAY,CAACC,UAAUd,EAAQG,MAC/BY,gBAAiB,CAACD,UAAUd,EAAQG,MACpCa,YAAa,CAACF,UAAUd,EAAQG,QAE/B,cAACc,EAAA,EAAD,CAAQH,UAAWd,EAAQK,YAAaa,QAzB9B,SAACC,GAEhBA,EAAMC,iBAEN,IADA,IAAIC,EAAI,GACAC,EAAI,EAAGA,EAAIvB,EAASwB,OAAQD,IAE7BvB,EAASuB,KAAOzB,GAEfwB,EAAEG,KAAKzB,EAASuB,IAKxBxB,EAAQuB,IAYH,wBCEEI,EAtCD,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAM5B,EAAa,EAAbA,QAAa,EACP6B,mBAAS,IADF,mBACxBC,EADwB,KAClBC,EADkB,KAYzB7B,EAVWC,aAAW,SAAAC,GAAK,MAAK,CAClC4B,MAAM,CACF1B,MAAO,WAGXC,YAAY,CACRC,WAAY,UACZC,OAAQL,EAAMM,QAAQ,QAGdC,GAYhB,OACI,gCACI,cAACC,EAAA,EAAD,CAAWqB,GAAG,aACVnB,MAAOgB,EACPI,SAdS,SAACb,GAClBU,EAAQV,EAAMc,OAAOrB,QAcbE,UAAWd,EAAQ8B,MACnBjB,WAAY,CAACC,UAAUd,EAAQ8B,OAC/Bf,gBAAiB,CAACD,UAAUd,EAAQ8B,OACpCd,YAAa,CAACF,UAAUd,EAAQ8B,SACpC,cAACb,EAAA,EAAD,CAAQH,UAAWd,EAAQK,YAAaa,QAf1B,SAACC,GACnBA,EAAMC,iBACNtB,EAAQ4B,EAAKQ,OAAON,IACpBC,EAAQ,KAYJ,wB,gBCMGM,MArCf,WAAgB,IAAD,EAEaR,mBAAS,IAFtB,mBAENS,EAFM,KAECC,EAFD,KAkBPnC,EAAQoC,YAAe,CAC3BC,QAAQ,CACNC,QAAQ,CACJC,KAAK,cAKb,OACE,qBAAK3B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEI,uCAxBJ,8BACE,eAAC4B,EAAA,EAAD,CAAexC,MAAOA,EAAtB,UACE,cAAC,EAAD,CAAOwB,KAAMU,EAAOtC,QAASuC,IAEvBD,EAAMO,KAAI,SAAAC,GAAC,OACT,cAAC,EAAD,CAAM/C,KAAM+C,EAAG9C,QAASuC,EAAUtC,SAAUqC,kBCJ/CS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.79acb341.chunk.js","sourcesContent":["import { Button, makeStyles, TextField } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst ToDo = ({text, setList, todoList}) => {\r\n    const useStyle = makeStyles(theme => ({\r\n        root:{\r\n            color: '#50fa7b',\r\n           \r\n        },\r\n        buttonStyle:{ \r\n            background: '#50fa7b',\r\n            margin: theme.spacing(.5),\r\n        }\r\n    }));\r\n    const deleteTodo = (event) => \r\n    {\r\n        event.preventDefault();\r\n        let n = [];\r\n        for(var i = 0; i < todoList.length; i++)\r\n        {\r\n            if(todoList[i] !== text)\r\n            {\r\n                n.push(todoList[i]);\r\n            }\r\n        }\r\n        \r\n\r\n        setList(n);\r\n    }\r\n    const classes = useStyle();\r\n    return(\r\n        <div>\r\n            <TextField\r\n            disabled\r\n            value={text}\r\n            inputProps={{className:classes.root}}\r\n            InputLabelProps={{className:classes.root}}\r\n            SelectProps={{className:classes.root}}\r\n            />\r\n             <Button className={classes.buttonStyle} onClick={deleteTodo}>Delete</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo;","import { Button, makeStyles, TextField } from '@material-ui/core';\r\nimport {React, useState} from 'react';\r\n\r\nconst Input = ({list, setList}) => {\r\n    const [todo, setTodo] = useState('');\r\n    const useStyle = makeStyles(theme => ({\r\n        input:{\r\n            color: '#50fa7b',\r\n            \r\n        },\r\n        buttonStyle:{ \r\n            background: '#50fa7b',\r\n            margin: theme.spacing(.5),\r\n        }\r\n    }))\r\n    const classes = useStyle();\r\n\r\n    const handleChange = (event) => {\r\n        setTodo(event.target.value);\r\n    }\r\n\r\n    const clickFunction = (event) => {\r\n        event.preventDefault();\r\n        setList(list.concat(todo));\r\n        setTodo('');\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <TextField id=\"todo-input\"\r\n                value={todo}\r\n                onChange={handleChange}\r\n                className={classes.input} \r\n                inputProps={{className:classes.input}}\r\n                InputLabelProps={{className:classes.input}}\r\n                SelectProps={{className:classes.input}}/>\r\n            <Button className={classes.buttonStyle} onClick={clickFunction}>Submit</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import './App.css';\nimport ToDo from './Components/ToDo/ToDo';\nimport Input from './Components/Input/Input';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport {React, useState} from 'react';\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n\n  const content = () => {\n    return(\n      <div>\n        <ThemeProvider theme={theme}>\n          <Input list={todos} setList={setTodos}/>\n              {\n                todos.map(t => \n                  <ToDo text={t} setList={setTodos} todoList={todos}/>)\n              }\n        </ThemeProvider>\n      </div>\n    )\n  }\n\n  const theme = createMuiTheme({\n    palette:{\n      primary:{\n          main:'#50fa7b',\n      },\n  },\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n          <h1>todos</h1>\n          {content()}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}